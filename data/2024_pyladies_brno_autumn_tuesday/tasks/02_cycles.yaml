tasks:

- section:
    markdown: |
      Tolik nových slovíček!
      Aby ses v nich neztratila, zkus pomocí pár vlastních slov popsat, co to je …

- id: term_function
  markdown: |
      … *funkce*
  submit: false

- id: term_argument
  markdown: |
      … *argument*
  submit: false

- id: term_procedure
  markdown: |
      … *procedura*
  submit: false

- id: term_return_value
  markdown: |
      … *návratová hodnota*
  submit: false

- id: term_expression
  markdown: |
      … *výraz*
  submit: false

- id: term_cycle
  markdown: |
      … *cyklus*
  submit: false

- id: cycles_000
  markdown: |
    Jakou sekvenci dostaneš, když funkci `range` zavoláš se dvěma argumenty?
    A se třemi?

- section:
    markdown: |
      Želví kreslení! Tahle sekce tě naučí myslet jako programátoři počítačové grafiky.
      Je dobré jednotlivé projekty dělat postupně a nepřeskakovat.
      Kdyby sis potřebovala od želvy oddechnout, skoč až na další sekci.

      Když něco začne fungovat, doporučuji znovu si
      řešení projít a zamyslet se nad ním.

- id: cycles_010
  markdown: |
    Nakresli trojúhelník.

    <img src="/static/tasks/handout3a_images/03_trojuhelnik.png" alt="trojúhelník" style="max-width: 100%; max-height: 60px">

    __Poznámka:__ Rovnostranný trojúhelník má vnitřní úhly 60°. Želva se ale otáčí o vedlejší úhel 180 - 60 = 120°.

    <img src="/static/tasks/handout3a_images/03_diagram.png" alt="diagram" style="max-width: 100%; max-height: 80px">

- id: cycles_020
  markdown: |
    Nakresli domeček!

    <img src="/static/tasks/handout3a_images/04_domecek.png" alt="domeček" style="max-width: 100%; max-height: 60px">

    _Jak pravil Pythagoras, délka šikmé čáry v domečku je √2-krát délka stěny. Funkci na odmocninu najdeš na taháku._

- id: cycles_030
  markdown: |
    Nakresli vesnici!

    <img src="/static/tasks/handout3a_images/05_vesnice.png" alt="vesnice" style="max-width: 100%; max-height: 60px">

    Jestli kreslení trvá dlouho a nebaví tě čekat,
    můžeš naimportovat a použít funkci [`speed`](https://docs.python.org/3/library/turtle.html#turtle.speed),
    která nastavuje rychlost dalšího kreslení:

    ```python
    from turtle import speed

    speed(1)  # želva jak má být – extrémně pomalá
    speed(3)  # pomalá želva
    speed(6)  # normálně rychlá želva
    speed(10) # hodně rychlá želva
    speed(0)  # turboželva
    ```

- id: cycles_040
  markdown: |
    Nakresli pravidelný `n`-úhelník, kde `n` zadá uživatel.

    _Vnitřní úhel pravidelného `n`-úhelníka má `180 × (1-2/n)` stupňů._

    _Aby byly tvary zhruba stejně veliké, použij pro `n`-úhelník délku strany např. `200/n`_

- id: cycles_050
  markdown: |
    Nakresli vedle sebe pětiúhelník, šestiúhelník, sedmiúhelník, osmiúhelník.

    <img src="/static/tasks/handout3a_images/06_uhelniky.png" alt="mnohoúhelníky" style="max-width: 100%; max-height: 60px">

- id: cycles_060
  markdown: |
    Želva umí jen rovné čáry. Jde pomocí rovných čar nakreslit kolečko?

    _Nevíš-li, přeskoč na další projekt a pak se sem vrať._

- id: cycles_070
  markdown: |
    Nakresli pravidelný stoúhelník.

- id: cycles_080
  markdown: |
    Nakresli takovýto ornament:

    <img src="/static/tasks/handout3a_images/10_ornament.png" alt="ornament" style="max-width: 100%; max-height: 80px">

    _Nevíš-li si rady, vezmi pravítko a změř délky jednotlivých čar. Doporučuju začít od středu._

- id: cycles_090
  markdown: |
    Nakresli takovýto ornament:

    <img src="/static/tasks/handout3a_images/11_ornament.png" alt="ornament" style="max-width: 100%; max-height: 90px">

- id: cycles_100
  markdown: |
    Nakresli spirálu.

    <img src="/static/tasks/handout3a_images/12_spirala.png" alt="spirála" style="max-width: 100%; max-height: 140px">

    _Od ornamentů ke spirále se dostaneš stejným způsobem jako od `n`-úhelníků ke kolečku._

- section:
    markdown: |
      Procvičení cyklů a podmínek

- id: cycles_110
  markdown: |
   Napiš program, který se zeptá na 3 čísla a zjistí, jestli je jejich součet
   větší než 10.

- id: cycles_120
  markdown: |
   Napiš program, který se zeptá na 10 čísel a zjistí, jestli je jejich součet
   větší než 1000.

- id: cycles_130
  markdown: |
    Napiš program, který postupně načte od uživatele dvě čísla a jednoznakový
    řetězec – buď `'+'`, `'-'`, `'*'` nebo `'/'`. Program provede na číslech
    příslušnou operaci.

    Příklad použití programu (hodnoty za dvojtečkou doplnil uživatel):

    ```
    První číslo: 123
    Druhé číslo: 456
    Operace: +
    123 + 456 = 579
    ```

- id: cycles_140
  markdown: |
    Napiš program, který se pětkrát zeptá na číslo a nejmenší zadané číslo vypíše.

    Program by mělo jít snadno upravit tak, aby se ptal na deset nebo sto čísel.

    _Nevíš-li si rady, podívej se do materiálů k Přepisování proměnných.
    Místo přičítání do proměnné `celkem` zkus dávat správnou hodnotu do
    proměnné `zatim_nejmensi`._

- section:
    markdown: |
      Hra pro tento týden!

- id: oko_bere
  markdown: |

    Naprogramuj hru *Oko bere*:

    * Začínáš se <var>skóre</var> 0 bodů.
    * V každém kole:
        * Počítač vypíše, kolik máš bodů.
        * Počítač se zeptá, jestli chceš pokračovat.
        * Pokud byla odpověď „ne“:
            * Hra končí.
        * Jinak:
            * Počítač „vybere kartu“ – náhodně vybere číslo od 2 do 10;
            * vybranou hodnotu vypíše;
            * přičte tuto hodnotu ke <var>skóre</var>.
        * Pokud máš víc než 21 bodů:
            * Počítač vypíše, že prohráváš;
            * hra končí.
    * Po skončení hry počítač vypíše dosažené <var>skóre</var>.

    Cílem hry je neprohrát a získat přitom co nejvíc bodů, ideálně 21.

- section:
    markdown: |
      A na konec pár nepovinných úkolů.
      Nestíháš-li, zaměř se na jiné úkoly.

- id: cycles_150
  markdown: |
    Napiš obrázek! Třeba les ze stromů, město z domů, nebe z hvězd,
    dav ze smajlíků, hradbu z věží, zikkurat ze schodů, ...

    Můžeš použít i nějakou z funkcí modulu `random`.

    Když budeš mít obrázků víc, odevzdej je všechny!

- id: cycles_160
  markdown: |
    V materiálech jsme kreslili tři čtverce, každý otočený o 15°.

    Nakresli 18 čtverců pootočených o 20°.

- id: cycles_170
  markdown: |
    Vezmi program z minulé úlohy a dokresli stonek a listy.
    Je jenom na tobě, jaký budou mít tvar – nemusí odpovídat vzorovému obrázku.
    Piš komentáře a snaž se opakovat pomocí `for`,
    ne pomocí Ctrl+C Ctrl+V.

    <img src="/static/tasks/handout3a_images/15_kvetina.png" alt="květina" style="max-width: 100%; max-height: 300px">
