tasks:

- id: handout6_01
  markdown: |
    Napiš funkci, která vrací jména domácích zvířat (zadaných argumentem), která jsou kratší než 5 písmen.
   

- id: handout6_02
  markdown: |
    Napiš funkci, která vrací jména domácích zvířat (zadaných argumentem), která začínají na `k`.


- section:
    markdown: |
      Čeká tě procvičování práce se seznamy.
      Některé z projektů – a zvlášť ten poslední – potřebují trochu přemýšlení;
      nebudeš-li vědět jak dál, zeptej se na internetu nebo na sraze ostatních
      a řešte společně!

- id: handout6_03
  markdown: |
    Udělej si seznam domácích zvířat. Budeš ho potřebovat v dalších úlohách.
    Domácí zvířata známe tato: `"pes", "kočka", "králík", "had"`.
    
    Napiš funkci, která přebere seznam a slovo a zjistí, jestli je to slovo v seznamu domácích zvířat.

    _„Zjistí“ znamená, že funkce vrátí `True` nebo `False`._
    
  mandatory: true

- id: handout6_04
  markdown: |
    Napiš funkci, která dostane dva seznamy jmen zvířat a vrátí tři seznamy:

    - zvířata, která jsou v obou seznamech (sjednocení množin: první ∪ druhá),
    - zvířata, která jsou jen v prvním seznamu (rozdíl množin: první - druhá),
    - zvířata, která jsou jen ve druhém seznamu (rozdíl množin: druhá - první).

  mandatory: true

- id: handout6_05
  markdown: |
    Napiš program, který seřadí seznam domácích zvířat podle abecedy.

- id: handout6_06
  markdown: |
    Had byl pyšný na to, že je v abecedě první.
    Dokud nepřiletěla `"andulka"`.

    Abys hada uklidnila, vytvoř funkci, která zvířata seřadí podle abecedy,
    ale bude ignorovat první písmeno t.j. vrátí:

    <pre>
    "h<span style='color: pink'>ad</span>",
    "p<span style='color: pink'>es</span>",
    "a<span style='color: pink'>ndulka</span>",
    "k<span style='color: pink'>očka</span>",
    "k<span style='color: pink'>rálík</span>".
    </pre>

    Postup:

    - Máš seznam _hodnot_, které chceš seřadit podle nějakého
        _klíče_. Klíč se dá z každé hodnoty vypočítat.
    - Vytvoř seznam dvojic `(klíč, hodnota)`.
    - Seřaď tento seznam dvojic – dvojice se řadí nejdřív podle
        prvního prvku, pak druhého atd.
    - Nakonec vytvoř ze seznamu dvojic opět jen seznam hodnot.

    Proč má zrovna had takovéhle výsadní postavení, zjistíš později.

- id: handout6_07
  markdown: |
    Napiš tyto funkce. Každá z nich dostane jako argument řetězec s rodným číslem, které
    určitým způsobem zanalyzuje.
    - Je ve správném formátu: 6 číslice, lomítko, 4 číslice? (vrací True nebo False)
    - Je dělitelné jedenácti? (vrací True nebo False)
    - Jaké datum narození je v čísle zakódováno? (vrací trojici čísel – den, měsíc, rok)
    - Jaké pohlaví je v čísle zakódováno? (vrací 'muž' nebo 'žena')

    Pro účely lekce by to bylo dostačující. Pokud máš chuť, podívej se, jaká pravidla platila
    pro rodná čísla před rokem 1985. A co rodná čísla pro cizince?


- section:
    markdown: |
      Jedna klasická programovací úloha, která nejspíš pořádně potrápí
      tvé logické myšlení. Je nepovinná, nemáš-li na ni aspoň pár hodin,
      tak ji přeskoč.

- id: handout6_09
  markdown: |
    Napiš funkci, která převede římské číslice na číslo (`int`).


- section:
    markdown: |
        A nakonec projekt na přemýšlení.

- id: handout6_17
  markdown: |
    Může seznam obsahovat sám sebe? Zkus co nejjednodušeji udělat takový seznam, aby platilo:

        seznam[5][5][5][5][5][5][5][5][5][5][5][5][5][5][5][5][5][5][0] == 5
